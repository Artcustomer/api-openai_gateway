# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.env: '%env(APP_ENV)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\AbstractAPIClientService:
        abstract: true
        calls:
            - setEventDispatcher: [ '@event_dispatcher' ]
            - setSessionManager: [ '@App\Service\SessionManager' ]

    App\Service\OpenAIService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(OPENAI_API_KEY)%'
            - '%env(OPENAI_ORGANISATION)%'
            - '%env(API_AVAILABILITY)%'

    App\Service\EdenAIService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(EDENAI_API_KEY)%'

    App\Service\ElevenLabsService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(ELEVENLABS_API_KEY)%'

    App\Service\MistralAIService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(MISTRALAI_API_KEY)%'

    App\Service\XAIService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(XAI_API_KEY)%'

    App\Service\DeepSeekService:
        parent: App\Service\AbstractAPIClientService
        arguments:
            - '%env(DEEPSEEK_API_KEY)%'

    App\Service\JsonUserService:
        $filePath: '%kernel.project_dir%/%env(DATA_USER_JSON_FILE)%'

    App\Service\JsonApiTokenService:
        $filePath: '%kernel.project_dir%/%env(DATA_API_TOKEN_JSON_FILE)%'

    App\EventListener\ApiCallListener:
        tags:
            - { name: kernel.event_listener, event: 'api.call.post_execute', method: 'onApiCallPostExecuteHandler' }
